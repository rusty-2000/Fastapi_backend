"""Add Member and Gym models

Revision ID: d990248843ac
Revises: 
Create Date: 2024-12-31 16:01:16.498613

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa
from  sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd990248843ac'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('members',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('member_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_already_a_member', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    # op.alter_column('gyms', 'published_date',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Date(),
    #            existing_nullable=False)
    op.alter_column('gyms', 'published_date',
                    type_=postgresql.DATE(),
                    postgresql_using="published_date::date")
    op.alter_column('gyms', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('gyms', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('gyms', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('gyms', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('gyms', 'published_date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_table('members')
    # ### end Alembic commands ###
